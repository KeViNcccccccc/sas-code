With test as(
select
    case 
        when {{unit}} = 'day' then toStartOfDay(end_time) 
        when {{unit}} = 'week' then toMonday(end_time) 
        when {{unit}} = 'month' then toStartOfMonth(end_time) 
    end as time,
    count(id) as total,
    count(distinct id), count(distinct driver_id)  as users, 
    count(distinct drive_id),count(distinct car_id),
    count(star_rating) as ratingnum,
    count(case when star_rating = 5 then star_rating end) as 5star,
    count(case when star_rating = 4 then star_rating end) as 4star,
    count(case when star_rating = 3 then star_rating end) as 3star,
    count(case when star_rating = 2 then star_rating end) as 2star,
    count(case when star_rating = 1 then star_rating end) as 1star
from telematics.trips
where case 
            when {{unit}} = 'day' then toStartOfDay(end_time) > toStartOfDay(now()) - interval {{num_rows}} + 1 day
            when {{unit}} = 'week' then toMonday(end_time) > toMonday(now()) - interval {{num_rows}} + 1 week
            else toStartOfMonth(end_time) > toStartOfMonth(now()) - interval {{num_rows}} + 1 month
        end
and end_time <= now()
group by time order by time desc
),

raw as(
select 
    case 
        when {{unit}} = 'day' then toStartOfDay(updated_at) 
        when {{unit}} = 'week' then toMonday(updated_at) 
        when {{unit}} = 'month' then toStartOfMonth(updated_at) 
    end as time2,
    count(case when overall = 100 then overall end) as score100, 
    count(case when overall > 90 and overall  != 100 Then overall end) as score90above,
    count(case when overall > 70 and overall <= 90 Then overall end) as score70bw90,
    count(case when overall > 50 and overall <= 70 Then overall end) as score50bw70,
    count(case when overall <= 50  Then overall end) as score50bl,
    count(overall) as numbers_of_user_received_score
from telematics.driver_scores 
where case 
            when {{unit}} = 'day' then toStartOfDay(updated_at) > toStartOfDay(now()) - interval {{num_rows}} + 1 day
            when {{unit}} = 'week' then toMonday(updated_at) > toMonday(now()) - interval {{num_rows}} + 1 week
            else toStartOfMonth(updated_at) > toStartOfMonth(now()) - interval {{num_rows}} + 1 month
        end
and updated_at <= now()
group by time2 order by time2 desc
)

select 
    time2 as `time`,
    numbers_of_user_received_score as `#_of_user_received_score`,
    score100 / numbers_of_user_received_score as `% users driving score100`,
    score90above / numbers_of_user_received_score as `% users above 90`,
    score70bw90 / numbers_of_user_received_score as `% users b/w 70-90`,
    score50bw70 / numbers_of_user_received_score as `% users b/w 50-70`,
    score50bl / numbers_of_user_received_score as `% users below 50`,
    test.5star / test.ratingnum as `% 5-star trips today`,
    test.4star / test.ratingnum as `% 4-star trips today`,
    test.3star / test.ratingnum as `% 3-star trips today`,
    test.2star / test.ratingnum as `% 2-star trips today`,
    test.1star / test.ratingnum as `% 1-star trips today`,
    test.total as `# of drivng events detected`,
    test.users as `# of users`
from raw
right join test on raw.time2 = test.time
